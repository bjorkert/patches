From 1a4da489ee0e1debb1a428e4d573e8645372caa4 Mon Sep 17 00:00:00 2001
From: bjorkert <jonas@bjorkert.se>
Date: Sat, 18 Feb 2023 14:37:31 +0100
Subject: [PATCH] preMeal

---
 Loop/Managers/LoopDataManager.swift | 74 +++++++++++++++++++++++++++++
 1 file changed, 74 insertions(+)

diff --git a/Loop/Managers/LoopDataManager.swift b/Loop/Managers/LoopDataManager.swift
index 00b64996..59ade86a 100644
--- a/Loop/Managers/LoopDataManager.swift
+++ b/Loop/Managers/LoopDataManager.swift
@@ -12,6 +12,19 @@ import HealthKit
 import LoopKit
 import LoopCore
 import WidgetKit
+import CommonCrypto
+
+extension String {
+    func sha1() -> String {
+        let data = Data(self.utf8)
+        var digest = [UInt8](repeating: 0, count:Int(CC_SHA1_DIGEST_LENGTH))
+        data.withUnsafeBytes {
+            _ = CC_SHA1($0.baseAddress, CC_LONG(data.count), &digest)
+        }
+        let hexBytes = digest.map { String(format: "%02hhx", $0) }
+        return hexBytes.joined()
+    }
+}
 
 protocol PresetActivationObserver: AnyObject {
     func presetActivated(context: TemporaryScheduleOverride.Context, duration: TemporaryScheduleOverride.Duration)
@@ -219,6 +232,66 @@ final class LoopDataManager {
     var settings: LoopSettings {
         lockedSettings.value
     }
+
+    //Patch for updating nightscout with preMeal info
+    private func preMeal(preMealTargetRange: TemporaryScheduleOverride?) {
+        do { // Silence all errors and return
+            let now = Date()
+
+            let keychain = KeychainManager()
+            let credentials = try keychain.getInternetCredentials(account: "NightscoutAPI")
+
+            let formatter = ISO8601DateFormatter()
+            formatter.timeZone = TimeZone(abbreviation: "UTC")
+            let dateString = formatter.string(from: now)
+
+            let json: [String: Any]
+
+            if let targetRange = preMealTargetRange?.settings.targetRange {
+                json = [
+                    "enteredBy": "Loop",
+                    "created_at": dateString,
+                    "eventType": "Temporary Target",
+                    "duration" : 60,
+                    "reason" : "Pre-Meal",
+                    "targetTop" : targetRange.upperBound.doubleValue(for: .milligramsPerDeciliter),
+                    "targetBottom" : targetRange.lowerBound.doubleValue(for: .milligramsPerDeciliter),
+                    "secret": credentials.password.sha1()
+                ]
+            } else {
+                json = [
+                    "enteredBy": "Loop",
+                    "created_at": dateString,
+                    "eventType": "Temporary Target",
+                    "duration" : 0,
+                    "secret": credentials.password.sha1()
+                ]
+            }
+
+            guard let url = URL(string: "\(credentials.url)/api/v1/treatments.json") else { return }
+            var request = URLRequest(url: url)
+            request.httpMethod = "POST"
+            request.setValue("application/json", forHTTPHeaderField: "Content-Type")
+            request.httpBody = try? JSONSerialization.data(withJSONObject: json)
+
+            let task = URLSession.shared.dataTask(with: request) { data, response, error in
+                if let error = error {
+                    // Handle network error
+                    print("Error: \(error)")
+                    return
+                }
+
+                guard let response = response as? HTTPURLResponse, response.statusCode == 200 else {
+                    // Handle server error
+                    print("Error: Invalid response")
+                    return
+                }
+            }
+            task.resume()
+        } catch {
+            return
+        }
+    }
 
     func mutateSettings(_ changes: (_ settings: inout LoopSettings) -> Void) {
         var oldValue: LoopSettings!
@@ -238,6 +311,7 @@ final class LoopDataManager {
         if newValue.preMealOverride != oldValue.preMealOverride {
             // The prediction isn't actually invalid, but a target range change requires recomputing recommended doses
             predictedGlucose = nil
+            preMeal(preMealTargetRange: newValue.preMealOverride)
         }
 
         if newValue.scheduleOverride != oldValue.scheduleOverride {
-- 
2.38.1

