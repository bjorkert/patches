From 5753e323bd7c20128046f29a0b2c8059ab6d1498 Mon Sep 17 00:00:00 2001
From: jonasbjo <jonas.bjorkert@tele2.com>
Date: Sun, 5 Feb 2023 11:30:04 +0100
Subject: [PATCH] siteChange

---
 OmniBLE/PumpManager/OmniBLEPumpManager.swift | 45 ++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/OmniBLE/PumpManager/OmniBLEPumpManager.swift b/OmniBLE/PumpManager/OmniBLEPumpManager.swift
index 90feb09..2e6f827 100644
--- a/OmniBLE/PumpManager/OmniBLEPumpManager.swift
+++ b/OmniBLE/PumpManager/OmniBLEPumpManager.swift
@@ -874,6 +874,49 @@ extension OmniBLEPumpManager {
         #endif
     }
 
+    private func SiteChange()
+    {
+        do { // Silence all errors and return
+            let keychain = KeychainManager()
+            let credentials = try keychain.getInternetCredentials(account: "NightscoutAPI")
+            
+            let date = Date()
+            let formatter = ISO8601DateFormatter()
+            formatter.timeZone = TimeZone(abbreviation: "UTC")
+            let dateString = formatter.string(from: date)
+            
+            let json: [String: Any] = [
+                "enteredBy": "Loop",
+                "timestamp": dateString,
+                "eventType": "Site Change",
+                "secret": credentials.password.sha1()
+            ]
+            
+            guard let url = URL(string: "\(credentials.url)/xapi/v1/treatments.json") else { return }
+            var request = URLRequest(url: url)
+            request.httpMethod = "POST"
+            request.setValue("application/json", forHTTPHeaderField: "Content-Type")
+            request.httpBody = try? JSONSerialization.data(withJSONObject: json)
+            
+            let task = URLSession.shared.dataTask(with: request) { data, response, error in
+                if let error = error {
+                    // Handle network error
+                    print("Error: \(error)")
+                    return
+                }
+                
+                guard let response = response as? HTTPURLResponse, response.statusCode == 200 else {
+                    // Handle server error
+                    print("Error: Invalid response")
+                    return
+                }
+            }
+            task.resume()
+        } catch {
+            return
+        }
+    }
+    
     // Called on the main thread
     public func insertCannula(completion: @escaping (Result<TimeInterval,OmniBLEPumpManagerError>) -> Void) {
         
@@ -894,6 +937,7 @@ extension OmniBLEPumpManager {
                 var podState = state.podState
                 podState?.setupProgress = .completed
                 state.updatePodStateFromPodComms(podState)
+                self.SiteChange()
                 return .success(mockDelay)
             })
 
@@ -944,6 +988,7 @@ extension OmniBLEPumpManager {
                     ]
 
                     let finishWait = try session.insertCannula(optionalAlerts: alerts)
+                    self.SiteChange()
                     completion(.success(finishWait))
                 } catch let error {
                     completion(.failure(.communication(error)))
-- 
2.38.1

